<template>
  <div class="app-container">
    <!-- 搜索栏 -->
    <el-form :model="queryParams" ref="queryForm" size="small" :inline="true" v-show="showSearch" label-width="auto">
      #foreach($field in $fields)
      #if($field.isWhere == 1)
      #if($field.htmlType == $null || $field.htmlType == "input")
      <el-form-item label="${field.fieldComment}" prop="${field.fieldName}">
        <el-input v-model="queryParams.${field.fieldName}" placeholder="请输入${field.fieldComment}" clearable @keyup.enter.native="handleQuery"/>
      </el-form-item>
      #elseif($field.htmlType == "select")
      <el-form-item label="${field.fieldComment}" prop="${field.fieldName}">
        <el-select v-model="queryParams.${field.fieldName}" placeholder="请选择${field.fieldComment}" clearable>
          <el-option v-for="item in xxxOptions" :key="item.key" :value="item.key" :label="item.label"/>
        </el-select>
      </el-form-item>
      #elseif($field.htmlType == "datetime")
      <el-form-item label="${field.fieldComment}" prop="${field.fieldName}">
        <el-date-picker v-model="queryParams.${field.fieldName}" value-format="YYYY-MM-DD" type="daterange"
                        range-separator="-" start-placeholder="开始时间" end-placeholder="结束时间"/>
      </el-form-item>
      #end
      #end
      #end
      <el-form-item>
        <el-button type="primary" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
        <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
      </el-form-item>
    </el-form>

    <!-- 操作栏 -->
    <el-row :gutter="10" class="mb8">
      <el-col :span="1.5">
        <el-button type="primary" plain icon="el-icon-plus" size="mini"
                   @click="handleAdd" v-hasPermi="['${authPrefix}:add']">新增</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button type="success" plain icon="el-icon-edit" size="mini" :disabled="single"
                   @click="handleEdit" v-hasPermi="['${authPrefix}:edit']">修改</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button type="danger" plain icon="el-icon-delete" size="mini" :disabled="multiple"
                   @click="handleDelete" v-hasPermi="['${authPrefix}:remove']">删除</el-button>
      </el-col>
      <el-col :span="1.5">
        <el-button type="warning" plain icon="el-icon-download" size="mini"
                   @click="handleExport" v-hasPermi="['${authPrefix}:export']">导出</el-button>
      </el-col>
      <right-toolbar :showSearch.sync="showSearch" @queryTable="getList"></right-toolbar>
    </el-row>

    <!-- 列表 -->
    <el-table v-loading="loading" :data="list" @selection-change="handleSelectionChange">
      <el-table-column type="selection" align="center" width="50"/>
      <el-table-column label="序号" type="index" align="center" width="55">
        <template slot-scope="scope">
          <span>{{(queryParams.page - 1) * queryParams.pageSize + scope.$index + 1}}</span>
        </template>
      </el-table-column>
      #foreach($field in $fields)
      #if($field.isList == 1)
      <el-table-column label="${field.fieldComment}" align="center" prop="${field.fieldName}"/>
      #end
      #end
      <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
        <template slot-scope="scope">
          <el-button size="mini" type="text" icon="el-icon-edit"
                     @click="handleEdit(scope.row)" v-hasPermi="['${authPrefix}:edit']">修改</el-button>
          <el-button size="mini" type="text" icon="el-icon-delete"
                     @click="handleDelete(scope.row)" v-hasPermi="['${authPrefix}:remove']">删除</el-button>
        </template>
      </el-table-column>
    </el-table>
    <pagination v-show="total>0" :total="total" :page.sync="queryParams.page" :limit.sync="queryParams.pageSize" @pagination="getList"/>

    <!-- 新增修改 -->
    <el-dialog :title="title" :visible.sync="open" width="600px" append-to-body>
      <el-form ref="form" :model="form" :rules="rules" label-width="auto">
      #foreach($field in $fields)
      #if($field.fieldName != "createUser" && $field.fieldName != "createDept" && $field.fieldName != "createTime" && $field.fieldName != "updateUser" && $field.fieldName != "updateDept" && $field.fieldName != "updateTime")
      #if($field.htmlType == $null || $field.htmlType == "input")
        <el-form-item label="${field.fieldComment}" prop="${field.fieldName}">
          <el-input v-model="form.${field.fieldName}" placeholder="请输入${field.fieldComment}" />
        </el-form-item>
      #elseif($field.htmlType == "imageUpload")
        <el-form-item label="${field.fieldComment}">
          <image-upload v-model="form.${field.fieldName}"/>
        </el-form-item>
      #elseif($field.htmlType == "fileUpload")
        <el-form-item label="${field.fieldComment}">
          <file-upload v-model="form.${field.fieldName}"/>
        </el-form-item>
      #elseif($field.htmlType == "editor")
        <el-form-item label="${field.fieldComment}">
          <editor v-model="form.${field.fieldName}" :min-height="192"/>
        </el-form-item>
      #elseif($field.htmlType == "select")
        <el-form-item label="${field.fieldComment}" prop="${field.fieldName}">
          <el-select v-model="form.${field.fieldName}" placeholder="请选择${field.fieldComment}">
            <el-option label="请选择字典生成" value="" />
          </el-select>
        </el-form-item>
      #elseif($field.htmlType == "checkbox")
        <el-form-item label="${field.fieldComment}">
          <el-checkbox-group v-model="form.${field.fieldName}">
            <el-checkbox v-for="dict in dict.type.${dictType}" :key="dict.value" :label="dict.value">
              {{dict.label}}
            </el-checkbox>
          </el-checkbox-group>
        </el-form-item>
      #elseif($field.htmlType == "radio")
        <el-form-item label="${field.fieldComment}">
          <el-radio-group v-model="form.${field.fieldName}">
            <el-radio v-for="dict in dict.type.${dictType}" :key="dict.value" :label="dict.value">{{dict.label}}</el-radio>
          </el-radio-group>
        </el-form-item>
      #elseif($field.htmlType == "datetime")
        <el-form-item label="${field.fieldComment}" prop="${field.fieldName}">
          <el-date-picker clearable v-model="form.${field.fieldName}" type="date" value-format="yyyy-MM-dd" placeholder="请选择${field.fieldComment}"/>
        </el-form-item>
      #elseif($field.htmlType == "textarea")
        <el-form-item label="${field.fieldComment}" prop="${field.fieldName}">
          <el-input v-model="form.${field.fieldName}" type="textarea" placeholder="..." />
        </el-form-item>
      #end
      #end
      #end
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button type="primary" @click="submitForm">确 定</el-button>
        <el-button @click="cancel">取 消</el-button>
      </div>
    </el-dialog>
  </div>
</template>

<script>
import { list${className}, info${className}, add${className}, edit${className}, del${className} } from "@/api/${appCode}/${className}";

export default {
  name: "${className}",
  dicts: [],
  data() {
    return {
      // 遮罩层
      loading: true,
      // 选中数组
      ids: [],
      // 非单个禁用
      single: true,
      // 非多个禁用
      multiple: true,
      // 显示搜索条件
      showSearch: true,
      // 总条数
      total: 0,
      // 表格数据
      list: [],
      // 弹出层标题
      title: "",
      // 是否弹出层
      open: false,
      // 查询参数
      queryParams: {
        page: 1,
        pageSize: 10,
        #foreach ($field in $fields)
        #if($field.isWhere == 1)
        $field.fieldName: null#if($foreach.count != $fields.size()),#end
        #end
        #end
      },
      // 表单
      form: {},
      // 校验
      rules: {
        #foreach ($field in $fields)
        #if($field.isNotnull == 1 && ($field.isIncrement == $null || $field.isIncrement == 0))
        $field.fieldName: [
          { required: true, message: "${field.fieldComment}不能为空", trigger: #if($column.htmlType == "select")"change"#else"blur"#end }
        ]#if($foreach.count != $columns.size()),#end
        #end
        #end
      }
    };
  },
  created() {
    this.getList();
  },
  methods: {
    /** 表单重置 */
    reset() {
      this.form = {
      #foreach ($field in $fields)
      #if($field.isWhere == 1)
      #if($field.fieldTypeName == "Integer" || $field.fieldTypeName == "Long")
        $field.fieldName: 0#if($foreach.count != $columns.size()),#end
      #else
        $field.fieldName: null#if($foreach.count != $columns.size()),#end
      #end
      #end
      #end
      };
      this.resetForm("form");
    },
    /** 搜索 */
    handleQuery() {
      this.queryParams.page = 1;
      this.getList();
    },
    /** 搜索重置 */
    resetQuery() {
      this.resetForm("queryForm");
      this.handleQuery();
    },
    /** 多选框 */
    handleSelectionChange(selection) {
      this.ids = selection.map(item => item.${pk.fieldName})
      this.single = selection.length!==1
      this.multiple = !selection.length
    },
    /** 列表 */
    getList() {
      this.loading = true;
      list${className}(this.queryParams).then(response => {
        this.list = response.data.list;
        this.total = response.data.total;
        this.loading = false;
      });
    },
    /** 新增 */
    handleAdd() {
      this.reset();
      this.open = true;
      this.title = "新增${modelName}";
    },
    /** 修改 */
    handleEdit(row) {
      this.reset();
      const ${pk.fieldName} = row.${pk.fieldName} || this.ids
      info${className}(${pk.fieldName}).then(response => {
        this.form = response.data;
        this.open = true;
        this.title = "修改${modelName}";
      });
    },
    /** 提交表单 */
    submitForm() {
      this.#[[$]]#refs["form"].validate(valid => {
        if (valid) {
          if (this.form.${pk.fieldName} != null) {
            edit${className}(this.form).then(response => {
              this.#[[$modal]]#.msgSuccess("修改成功");
              this.open = false;
              this.getList();
            });
          } else {
            add${className}(this.form).then(response => {
              this.#[[$modal]]#.msgSuccess("新增成功");
              this.open = false;
              this.getList();
            });
          }
        }
      });
    },
    /** 取消提交 */
    cancel() {
      this.open = false;
      this.reset();
    },
    /** 删除 */
    handleDelete(row) {
      const ${pk.fieldName}s = row.${pk.fieldName} || this.ids
      const msg = row.${pk.fieldName} ? '确认删除${modelName}[' + row.${pk.fieldName} + ']?' : '确认删除所选${modelName}？';
      this.#[[$modal]]#.confirm(msg).then(function() {
        return del${className}(${pk.fieldName}s);
      }).then(() => {
        this.getList();
        this.#[[$modal]]#.msgSuccess("删除成功");
      }).catch(() => {});
    },
    /** 导出 */
    handleExport() {
      this.download('${httpContext}/api/v1${apiContext}/export', {
        ...this.queryParams
      }, `${modelName}_#[[${new Date().getTime()}]]#.xlsx`)
    }
  }
};
</script>
