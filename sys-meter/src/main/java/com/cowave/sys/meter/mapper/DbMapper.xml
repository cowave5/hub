<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Copyright (c) 2017～2025 Cowave All Rights Reserved.

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0.txt

    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

-->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cowave.sys.meter.mapper.DbMapper">
    <resultMap id="dbMap" type="com.cowave.sys.meter.entity.DbInfo">
        <result column="id" property="id"/>
        <result column="db_name" property="dbName"/>
        <result column="db_code" property="dbCode"/>
        <result column="db_type" property="dbType"/>
        <result column="db_url" property="dbUrl"/>
        <result column="db_user" property="dbUser"/>
        <result column="db_passwd" property="dbPasswd"/>
        <result column="remark" property="remark"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <select id="options" resultType="com.cowave.sys.meter.entity.SelectOption">
        select d.id as key, d.db_name || '｜' ||d.db_code as label from db_info d
    </select>

    <select id="list" resultMap="dbMap">
        select d.id,d.db_name,d.db_code,d.db_type,d.db_url,d.update_time
        from db_info d
        <where>
            <if test="dbType != null and dbType != ''">
                and d.db_type = #{dbType}
            </if>
            <if test="dbCode != null and dbCode != ''">
                and d.db_code like concat('%', #{dbCode}, '%')
            </if>
        </where>
        order by d.update_time desc
    </select>

    <select id="info" resultMap="dbMap">
        select d.id, d.db_name, d.db_code, d.db_type, d.db_url, d.db_user, d.db_passwd, d.remark
        from db_info d where d.id = #{id}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into db_info(db_name, db_code, db_type, db_url, db_user, db_passwd, remark, update_time)
        values (#{dbName}, #{dbCode}, #{dbType}, #{dbUrl}, #{dbUser}, #{dbPasswd}, #{remark}, #{accessTime})
    </insert>

    <update id="update">
        update db_info
        set db_name     = #{dbName},
            db_code     = #{dbCode},
            db_type     = #{dbType},
            db_url      = #{dbUrl},
            db_user     = #{dbUser},
            db_passwd   = #{dbPasswd},
            remark      = #{remark},
            update_time = #{accessTime}
        where id = #{id}
    </update>

    <delete id="delete">
        delete from db_info where id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="updateSynInfo">
        update db_info
        set db_url      = #{dbUrl},
            db_user     = #{dbUser},
            db_passwd   = #{dbPasswd},
            update_time = #{accessTime}
        where id = #{id}
    </update>

    <select id="oscarTables" resultType="com.cowave.sys.meter.entity.DbTable">
        select o.object_name tableName, t.comments tableComment, o.created updateTime
          from info_schem.all_objects o, info_schem.all_tab_comments t
         where o.owner = #{owner} and o.object_type = 'TABLE'
           and o.owner = t.owner and o.object_name = t.table_name
    </select>

    <select id="oscarPrimarys" resultType="com.cowave.sys.meter.entity.DbTableColumn">
        select i.table_name tableName, c.column_name columnName
        from info_schem.all_constraints i, info_schem.all_cons_columns c
        where i.owner = #{owner} and i.constraint_type = 'P'
          and i.owner = c.owner and i.table_name = c.table_name and i.constraint_name = c.constraint_name
    </select>

    <select id="oscarIndexs" resultType="com.cowave.sys.meter.entity.DbTableIndex">
        select i.index_type indexType, i.index_name indexName,
               case i.uniqueness when 'UNIQUE' then 1 else 0 end as isUnique,
               c.table_name tableName, c.column_name columnName, c.column_position columnPosition,
               case t.constraint_type when 'P' then 1 else 0 end as isPrimary
        from INFO_SCHEM.All_indexes i
        left join INFO_SCHEM.all_constraints t on i.owner = t.owner and i.index_name = t.constraint_name,
             INFO_SCHEM.all_ind_columns c
        where i.owner = #{owner} and i.owner = c.index_owner and i.index_name = c.index_name
    </select>

    <select id="oscarSequences" resultType="com.cowave.sys.meter.entity.DbSequence">
        select sequence_name sequenceName, min_value minValue, max_value maxValue,
               increment_by incrementBy, last_number lastNumber
        from info_schem.all_sequences where sequence_owner = #{owner}
    </select>

    <select id="oscarTableColumns" resultType="com.cowave.sys.meter.entity.DbTableColumn">
        select t.column_name columnName,
               c.comments columnComment,
               t.data_type columnType,
               t.data_default columnDefault,
               t.column_id as sort,
               (case when t.nullable = 'N' then 1 else 0 end) as isNotnull,
               t.data_length columnLength,
               t.data_precision columnPrecision,
               t.data_scale columnScale
        from info_schem.all_tab_columns t, info_schem.all_col_comments c
        where t.owner = #{owner} and t.table_name = #{tableName}
          and t.owner = c.owner and t.table_name = c.table_name and t.column_name = c.column_name
    </select>

    <select id="mysqlTables" resultType="com.cowave.sys.meter.entity.DbTable">
        select table_name tableName, table_comment tableComment, create_time updateTime, update_time updateTime
          from information_schema.tables
         where table_schema = (select database())
    </select>

    <select id="mysqlTableColumns" resultType="com.cowave.sys.meter.entity.DbTableColumn">
        select column_name columnName,
               column_comment columnComment,
               column_type columnTypename,
               column_default columnDefault,
               ordinal_position as sort,
               (case when is_nullable = 'no' then 1 else 0 end) as isNotnull,
               (case when column_key = 'PRI' then 1 else 0 end) as isPrimary,
               (case when extra = 'auto_increment' then 1 else 0 end) as isIncrement
        from information_schema.columns where table_schema = (select database()) and table_name = #{tableName}
    </select>

    <select id="postgresTables" resultType="com.cowave.sys.meter.entity.DbTable">
        select t.table_name tableName, obj_description(c.oid) as tableComment
        from information_schema.tables t
        left join pg_class c on t.table_name = c.relname
        where t.table_schema = 'public' and t.table_type = 'BASE TABLE';
    </select>

    <select id="postgresTableColumns" resultType="com.cowave.sys.meter.entity.DbTableColumn">
        select a.attname columnName, a.attnum sort, t.typname columnType, b.description columnComment,
               case a.attnotnull when 't' then 1 else 0 end as isNotnull,
               case when pg_get_serial_sequence(l.table_name, l.column_name) IS NOT NULL then 1 else 0 end AS isIncrement,
               case when exists (select 1 from information_schema.key_column_usage
               where table_name = #{tableName} and table_schema = 'public' and column_name = l.column_name) then 1 else 0 end as isPrimary,
               l.column_default columnDefault, l.character_maximum_length columnLength, l.numeric_precision columnPrecision, l.numeric_scale columnScale,
               l.datetime_precision datetimePrecision
        from pg_class c, pg_attribute a
        left outer join pg_description b on a.attrelid=b.objoid and a.attnum = b.objsubid
        left join information_schema.columns l on l.column_name = a.attname and l.table_name = #{tableName},
        pg_type t
        where c.relname = #{tableName} and a.attnum > 0 and a.attrelid = c.oid and a.atttypid = t.oid order by a.attnum
    </select>
</mapper>
