<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Copyright (c) 2017ï½ž2025 Cowave All Rights Reserved.

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0.txt

    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

-->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cowave.sys.meter.mapper.FieldMapper">
    <resultMap id="fieldMap" type="com.cowave.sys.meter.entity.ModelField">
        <result column="id" property="id"/>
        <result column="model_id" property="modelId"/>
        <result column="column_id" property="columnId"/>
        <result column="column_name" property="columnName"/>
        <result column="is_primary" property="isPrimary"/>
        <result column="is_increment" property="isIncrement"/>
        <result column="field_name" property="fieldName"/>
        <result column="field_type" property="fieldType"/>
        <result column="field_type_name" property="fieldTypeName"/>
        <result column="field_comment" property="fieldComment"/>
        <result column="sort" property="sort"/>
        <result column="is_notnull" property="isNotnull"/>
        <result column="is_collect" property="isCollect"/>
        <result column="is_list" property="isList"/>
        <result column="is_info" property="isInfo"/>
        <result column="is_insert" property="isInsert"/>
        <result column="is_edit" property="isEdit"/>
        <result column="is_where" property="isWhere"/>
        <result column="where_type" property="whereType"/>
        <result column="html_type" property="htmlType"/>
        <result column="is_excel" property="isExcel"/>
        <result column="excel_name" property="excelName"/>
        <result column="excel_width" property="excelWidth"/>
        <result column="excel_converter" property="excelConverter"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>

    <select id="types" resultType="com.cowave.sys.meter.entity.TypeField">
        select m.id as key, m.class_name as label
        from model_info m, app_info a
        where a.id = #{appId} and m.app_id = a.id and m.is_quote = 1
    </select>

    <select id="list" resultMap="fieldMap">
        <![CDATA[
        select f.id,f.field_name,f.field_type,f.is_notnull,f.field_comment,f.is_excel,f.excel_width,f.excel_name,
               f.is_collect,f.is_list,f.is_info,f.is_insert,f.is_edit,f.is_where,
               f.html_type,f.where_type,f.excel_converter,c.column_name,c.is_primary,c.is_increment,
               case f.field_type
                   when -1 then 'String'
                   when -2 then 'Integer'
                   when -3 then 'Long'
                   when -4 then 'Float'
                   when -5 then 'Double'
                   when -6 then 'BigDecimal'
                   when -7 then 'Date'
                   when -8 then 'Byte[]'
                   when -9 then 'Map<String, Object>'
                   else m.class_name end as field_type_name
        from model_field f
        left join db_table_column c on c.id = f.column_id
        left join model_info m on f.field_type = m.id
        where f.model_id = #{modelId}
        order by f.sort
        ]]>
    </select>

    <select id="info" resultMap="fieldMap">
        select f.id,f.model_id,f.column_id,f.field_name,f.field_type,f.field_comment,f.sort,
               f.is_collect,f.is_list,f.is_info,f.is_insert,f.is_edit,f.is_where,f.is_excel,
               f.where_type,f.html_type,f.excel_name,f.excel_width,f.excel_converter,f.is_notnull
        from model_field f
        where f.id = #{id}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into model_field(model_id,column_id,field_name,field_type,field_comment,sort,is_notnull,
                                    is_collect,is_list,is_info,is_insert,is_edit,is_where,is_excel,
                                    where_type,html_type,excel_name,excel_width,excel_converter,update_time)
        values(#{modelId},#{columnId},#{fieldName},#{fieldType},#{fieldComment},#{sort},#{isNotnull},
               #{isCollect},#{isList},#{isInfo},#{isInsert},#{isEdit},#{isWhere},#{isExcel},
               #{whereType},#{htmlType},#{excelName},#{excelWidth},#{excelConverter},#{accessTime})
    </insert>

    <update id="update">
        update model_field
        set model_id        = #{modelId},
            column_id       = #{columnId},
            field_name      = #{fieldName},
            field_type      = #{fieldType},
            field_comment   = #{fieldComment},
            sort            = #{sort},
            is_notnull      = #{isNotnull},
            is_collect      = #{isCollect},
            is_list         = #{isList},
            is_info         = #{isInfo},
            is_insert       = #{isInsert},
            is_edit         = #{isEdit},
            is_where        = #{isWhere},
            is_excel        = #{isExcel},
            where_type      = #{whereType},
            html_type       = #{htmlType},
            excel_name      = #{excelName},
            excel_width     = #{excelWidth},
            excel_converter = #{excelConverter},
            update_time     = #{accessTime}
        where id = #{id}
    </update>

    <delete id="delete">
        delete from model_field where id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="switchNotnull">
        update model_field
        set is_notnull     = #{flag},
            update_time    = #{user.accessTime}
        where id = #{id}
    </update>

    <update id="switchCollect">
        update model_field
        set is_collect     = #{flag},
            update_time    = #{user.accessTime}
        where id = #{id}
    </update>

    <update id="switchExcel">
        update model_field
        set is_excel       = #{flag},
            update_time    = #{user.accessTime}
        where id = #{id}
    </update>

    <update id="switchWhere">
        update model_field
        set is_where       = #{flag},
            update_time    = #{user.accessTime}
        where id = #{id}
    </update>

    <update id="switchList">
        update model_field
        set is_list        = #{flag},
            update_time    = #{user.accessTime}
        where id = #{id}
    </update>

    <update id="switchInfo">
        update model_field
        set is_info        = #{flag},
            update_time    = #{user.accessTime}
        where id = #{id}
    </update>

    <update id="switchInsert">
        update model_field
        set is_insert      = #{flag},
            update_time    = #{user.accessTime}
        where id = #{id}
    </update>

    <update id="switchEdit">
        update model_field
        set is_edit        = #{flag},
            update_time    = #{user.accessTime}
        where id = #{id}
    </update>

    <delete id="clearModelFields">
        delete from model_field where model_id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>
