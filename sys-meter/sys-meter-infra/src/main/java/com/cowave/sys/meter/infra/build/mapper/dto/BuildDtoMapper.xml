<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Copyright (c) 2017ï½ž2025 Cowave All Rights Reserved.

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0.txt

    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

-->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cowave.sys.meter.infra.build.mapper.dto.BuildDtoMapper">

    <select id="nextIndexInFolder" resultType="java.lang.Integer" useCache="false">
        select coalesce(max(folder_order), 0) + 1 from build_folder where parent_id = #{parentId}
    </select>

    <select id="nextIndexOfBuild" resultType="java.lang.Long" useCache="false">
        select coalesce(max(build_index), 0) + 1 from build_history where build_id = #{buildId}
    </select>

    <select id="folderChildrenIds" resultType="java.lang.Integer">
        with recursive folder_tree as (
            select folder_id, parent_id from build_folder where folder_id = #{folderId}
            union all
            select f.folder_id, f.parent_id from build_folder f join folder_tree ft on f.parent_id = ft.folder_id
        )
        select folder_id from folder_tree
    </select>

    <select id="folderChildrenOwners" resultType="com.cowave.sys.meter.domain.build.bo.FolderOwner">
        with recursive folder_tree as (
            select folder_id, parent_id, owner_code, owner_name from build_folder where folder_id = #{folderId}
            union all
            select f.folder_id, f.parent_id, f.owner_code, f.owner_name
            from build_folder f join folder_tree ft on f.parent_id = ft.folder_id
        )
        select distinct owner_code ownerCode, owner_name ownerName from folder_tree
    </select>

    <select id="folderParentOwners" resultType="com.cowave.sys.meter.domain.build.bo.FolderOwner">
        with recursive folder_path as (
            select folder_id, parent_id, owner_code, owner_name from build_folder where folder_id = #{folderId}
            union all
            select f.folder_id, f.parent_id, f.owner_code, f.owner_name
            from build_folder f join folder_path fp on f.folder_id = fp.parent_id
        )
        select distinct owner_code ownerCode, owner_name ownerName from folder_path
    </select>

    <update id="syncChildrenOwner">
        UPDATE build_folder_member
        set user_role = 2 from build_folder
        where build_folder.folder_id = build_folder_member.folder_id
          and build_folder.owner_code = build_folder_member.user_code
          and build_folder.folder_id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>






