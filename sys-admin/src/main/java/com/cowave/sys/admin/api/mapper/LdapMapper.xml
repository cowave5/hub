<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Copyright (c) 2017ï½ž2099 Cowave All Rights Reserved.

    For licensing information, please contact: https://www.cowave.com.

    This code is proprietary and confidential.
    Unauthorized copying of this file, via any medium is strictly prohibited.

-->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cowave.sys.admin.api.mapper.LdapMapper">
    <resultMap id="ldapMap" type="com.cowave.sys.admin.api.entity.ldap.LdapConfig">
        <result column="id"            property="id"/>
        <result column="ldap_name"     property="ldapName"/>
        <result column="ldap_status"   property="ldapStatus"/>
        <result column="ldap_url"      property="ldapUrl"/>
        <result column="ldap_user"     property="ldapUser"/>
        <result column="ldap_passwd"   property="ldapPasswd"/>
        <result column="base_dn"       property="baseDn"/>
        <result column="readonly"      property="readonly"/>
        <result column="user_dn"       property="userDn"/>
        <result column="user_class"    property="userClass"/>
        <result column="account_property" property="accountProperty"/>
        <result column="name_property"    property="nameProperty"/>
        <result column="email_property"   property="emailProperty"/>
        <result column="phone_property"   property="phoneProperty"/>
        <result column="post_property"    property="postProperty"/>
        <result column="dept_property"    property="deptProperty"/>
        <result column="leader_property"  property="leaderProperty"/>
        <result column="info_property"    property="infoProperty"/>
        <result column="user_role"     property="userRole"/>
        <result column="role_name"     property="roleName"/>
        <result column="create_user"   property="createUser"/>
        <result column="update_user"   property="updateUser"/>
        <result column="create_dept"   property="createDept"/>
        <result column="update_dept"   property="updateDept"/>
        <result column="create_time"   property="createTime"/>
        <result column="update_time"   property="updateTime"/>
        <result column="environment"   property="environment" typeHandler="com.cowave.commons.framework.support.mybatis.JsonTypeHandler"/>
    </resultMap>

    <resultMap id="userMap" type="com.cowave.sys.admin.api.entity.ldap.LdapUser">
        <result column="id"            property="id"/>
        <result column="user_id"       property="userId"/>
        <result column="ldap_id"       property="ldapId"/>
        <result column="user_info"     property="userInfo"/>
        <result column="user_account"  property="userAccount"/>
        <result column="user_passwd"   property="userPasswd"/>
        <result column="user_name"     property="userName"/>
        <result column="user_phone"    property="userPhone"/>
        <result column="user_email"    property="userEmail"/>
        <result column="user_post"     property="userPost"/>
        <result column="user_dept"     property="userDept"/>
        <result column="user_leader"   property="userLeader"/>
        <result column="is_sync"       property="isSync"/>
        <result column="create_time"   property="createTime"/>
        <result column="update_time"   property="updateTime"/>
    </resultMap>

    <select id="getEnableLdap" resultMap="ldapMap">
        select id,ldap_name,ldap_status,ldap_url,ldap_user,ldap_passwd,
               base_dn,readonly,user_dn,user_class,user_role,environment,
               account_property,name_property,email_property,phone_property,post_property,dept_property,leader_property,info_property
        from ldap_config
        where ldap_status = 1 limit 1
    </select>

    <select id="list" resultMap="ldapMap">
        select l.id,l.ldap_name,l.ldap_status,l.ldap_url,l.ldap_user,l.ldap_passwd,
        l.base_dn,l.readonly,l.user_dn,l.user_class,l.user_role,l.environment,
        l.create_user,l.update_user,l.create_dept,l.update_dept,l.create_time,l.update_time,
        r.role_name
        from ldap_config l
        left join sys_role r on l.user_role = r.role_id
        <where>
            <if test="ldapName != null">
                and ldap_name like concat('%', #{ldapName}, '%')
            </if>
        </where>
    </select>

    <select id="info" resultMap="ldapMap">
        select id,ldap_name,ldap_status,ldap_url,ldap_user,ldap_passwd,
               base_dn,readonly,user_dn,user_class,user_role,environment,
               account_property,name_property,email_property,phone_property,post_property,dept_property,leader_property,info_property
        from ldap_config where id = #{id}
    </select>

    <insert id="insert">
        insert into ldap_config(ldap_name,ldap_status,ldap_url,ldap_user,ldap_passwd,base_dn,readonly,
                                user_dn,user_class,user_role,environment,
                                account_property,name_property,email_property,phone_property,post_property,dept_property,leader_property,info_property,
                                create_user,update_user,create_dept,update_dept,create_time,update_time)
        values (#{ldapName},#{ldapStatus},#{ldapUrl},#{ldapUser},#{ldapPasswd},#{baseDn},#{readonly},#{userDn},#{userClass},#{userRole},
                #{environment,jdbcType=OTHER,typeHandler=com.cowave.commons.framework.support.mybatis.JsonTypeHandler},
                #{accountProperty},#{nameProperty},#{emailProperty},#{phoneProperty},#{postProperty},#{deptProperty},
                #{leaderProperty},#{infoProperty},#{accessUserId},#{accessUserId},#{accessDeptId},#{accessDeptId},#{accessTime},#{accessTime})
    </insert>

    <update id="update">
        update ldap_config
        set ldap_name        = #{ldapName},
            ldap_url         = #{ldapUrl},
            ldap_user        = #{ldapUser},
            ldap_passwd      = #{ldapPasswd},
            base_dn          = #{baseDn},
            user_dn          = #{userDn},
            user_class       = #{userClass},
            account_property = #{accountProperty},
            name_property    = #{nameProperty},
            email_property   = #{emailProperty},
            phone_property   = #{phoneProperty},
            post_property    = #{postProperty},
            dept_property    = #{deptProperty},
            leader_property  = #{leaderProperty},
            info_property    = #{infoProperty},
            user_role        = #{userRole},
            update_user      = #{accessUserId},
            update_dept      = #{accessDeptId},
            update_time      = #{accessTime}
        where id = #{id}
    </update>

    <delete id="delete">
        delete from ldap_config where id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="enableCount" resultType="java.lang.Integer">
        select count(1)
        from ldap_config where id != #{id} and ldap_status = 1
    </select>

    <update id="changeStatus">
        update ldap_config
        set ldap_status = #{status}
        where id = #{id}
    </update>

    <insert id="createSysUser" useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id">
        insert into sys_user(user_type,user_account,user_passwd,user_name,user_phone,user_email,create_time, update_time)
        values (1,#{userAccount},#{userPasswd},#{userName},#{userPhone},#{userEmail},#{createTime},#{createTime})
        on conflict(user_account) do nothing
    </insert>

    <insert id="grantSysRole">
        insert into sys_user_role(user_id, role_id) values (#{userId}, #{roleId})
    </insert>

    <insert id="saveLdapUser">
        insert into ldap_user(user_id, ldap_id, user_info, user_account, user_passwd, user_name, user_phone, user_email,
                              user_post, user_dept, user_leader, create_time, update_time)
        values (#{userId}, #{ldapId}, #{userInfo}, #{userAccount}, #{userPasswd}, #{userName}, #{userPhone},
                #{userEmail}, #{userPost}, #{userDept}, #{userLeader}, #{createTime}, #{createTime}) on conflict(user_account)
        do
        update set user_id = excluded.user_id,
            ldap_id = excluded.ldap_id,
            user_info = excluded.user_info,
            user_passwd = excluded.user_passwd,
            user_name = excluded.user_name,
            user_phone = excluded.user_phone,
            user_email = excluded.user_email,
            user_post = excluded.user_post,
            user_dept = excluded.user_dept,
            user_leader = excluded.user_leader,
            update_time = excluded.update_time
    </insert>

    <select id="ldapUserInfo" resultMap="userMap">
        select id,user_id,ldap_id,user_info,user_account,user_passwd,user_name,user_phone,user_email,
               user_post,user_dept,user_leader,is_sync,create_time,update_time
        from ldap_user
        where user_id = #{userId}
    </select>
</mapper>


