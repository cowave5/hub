<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Copyright (c) 2017～2099 Cowave All Rights Reserved.

    For licensing information, please contact: https://www.cowave.com.

    This code is proprietary and confidential.
    Unauthorized copying of this file, via any medium is strictly prohibited.

-->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cowave.sys.admin.api.mapper.SysDictMapper">
    <sql id="dictField">
        d.id,
        d.parent_code   parentCode,
	    d.dict_code     dictCode,
	    d.dict_label    dictLabel,
        d.dict_en       dictEn,
        d.dict_value    dictValue,
        d.value_param   valueParam,
        d.value_parser  valueParser,
        d.dict_order    dictOrder,
	    d.is_default    isDefault,
	    d.read_only     readOnly,
	    d.status,
        d.css,
        d.create_user  createUser,
        d.create_dept  createDept,
        d.create_time  createTime,
        d.update_user  updateUser,
        d.update_dept  updateDept,
        d.update_time  updateTime,
        d.remark
    </sql>

    <resultMap id="dictOptionsMap" type="com.cowave.sys.admin.api.entity.SelectOption">
        <result column="group_code"     property="key"/>
        <result column="group_name"     property="label"/>
        <result column="group_en"       property="labelEn"/>
        <collection property="children" javaType="list" ofType="com.cowave.sys.admin.api.entity.SelectOption">
            <result column="type_code"     property="key"/>
            <result column="type_name"     property="label"/>
            <result column="type_en"       property="labelEn"/>
        </collection>
    </resultMap>

    <select id="dictOptions" resultMap="dictOptionsMap">
        select t.group_code, t.type_code,
               case t.group_code when 'dict_root' then '根字典' else d1.dict_label end group_name,
               case t.group_code when 'dict_root' then 'dict_root' else d1.dict_label end group_en,
               d2.dict_label type_name, d2.dict_en type_en
        from(with groups as (select parent_code, dict_code from sys_dict where parent_code = 'dict_group')
             select d1.parent_code as group_code, d1.dict_code as type_code from sys_dict d1 where d1.parent_code = 'dict_root' union all
             select groups.parent_code as group_code, groups.dict_code as type_code from groups union all
             select d.parent_code as group_code, d.dict_code as type_code from sys_dict d, groups where d.parent_code = groups.dict_code) t
        left join sys_dict d1 on t.group_code = d1.dict_code
        left join sys_dict d2 on t.type_code = d2.dict_code
    </select>

    <select id="groupOptions" resultMap="dictOptionsMap">
        select t.dict_label group_name, t.dict_en group_en, t.dict_code group_code,
               d.dict_label type_name, d.dict_en type_en, d.dict_code type_code
        from sys_dict d
        left join sys_dict t on d.parent_code = t.dict_code
        left join sys_dict g on t.parent_code = g.dict_code
        where t.parent_code = #{groupCode}
    </select>

    <select id="list" resultType="com.cowave.sys.model.admin.SysDict">
        select
        case d.parent_code when 'dict_root' then '根字典' when 'dict_group' then '根字典' else g.dict_label end groupName,
        case d.parent_code when 'dict_root' then 'dict_root'  when 'dict_group' then 'dict_root' else g.dict_en end groupEn,
        case d.parent_code when 'dict_root' then 'dict_root'  when 'dict_group' then 'dict_root' else g.dict_code end groupCode,
        case d.parent_code when 'dict_root' then '根字典' else t.dict_label end typeName,
        case d.parent_code when 'dict_root' then 'dict_root'  else t.dict_en end typeEn,
        case d.parent_code when 'dict_root' then 'dict_root'  else t.dict_code end typeCode,
        <include refid="dictField"/>
        from sys_dict d
        left join sys_dict t on d.parent_code = t.dict_code
        left join sys_dict g on t.parent_code = g.dict_code
        where 1 = 1
        <if test="groupCode != null">
            and t.parent_code = #{groupCode}
        </if>
        <if test="typeCode != null">
            and t.dict_code = #{typeCode}
        </if>
        order by d.dict_order, d.parent_code
    </select>

    <select id="queryById" resultType="com.cowave.sys.model.admin.SysDict">
        select
        case d.parent_code when 'dict_root' then '根字典' when 'dict_group' then '根字典' else g.dict_label end groupName,
        case d.parent_code when 'dict_root' then 'dict_root'  when 'dict_group' then 'dict_root' else g.dict_en end groupEn,
        case d.parent_code when 'dict_root' then 'dict_root'  when 'dict_group' then 'dict_root' else g.dict_code end groupCode,
        case d.parent_code when 'dict_root' then '根字典' else t.dict_label end typeName,
        case d.parent_code when 'dict_root' then 'dict_root'  else t.dict_en end typeEn,
        case d.parent_code when 'dict_root' then 'dict_root'  else t.dict_code end typeCode,
        <include refid="dictField"/>
        from sys_dict d
        left join sys_dict t on d.parent_code = t.dict_code
        left join sys_dict g on t.parent_code = g.dict_code
        where d.id = #{id}
    </select>

    <select id="queryByParentCode" resultType="com.cowave.sys.model.admin.SysDict">
        select
        case d.parent_code when 'dict_root' then '根字典' when 'dict_group' then '根字典' else g.dict_label end groupName,
        case d.parent_code when 'dict_root' then 'dict_root'  when 'dict_group' then 'dict_root' else g.dict_en end groupEn,
        case d.parent_code when 'dict_root' then 'dict_root'  when 'dict_group' then 'dict_root' else g.dict_code end groupCode,
        case d.parent_code when 'dict_root' then '根字典' else t.dict_label end typeName,
        case d.parent_code when 'dict_root' then 'dict_root'  else t.dict_en end typeEn,
        case d.parent_code when 'dict_root' then 'dict_root'  else t.dict_code end typeCode,
        <include refid="dictField"/>
        from sys_dict d
        left join sys_dict t on d.parent_code = t.dict_code
        left join sys_dict g on t.parent_code = g.dict_code
        where d.parent_code = #{parentCode}
    </select>

    <select id="queryByIdArray" resultType="com.cowave.sys.model.admin.SysDict">
        select
        case d.parent_code when 'dict_root' then '根字典' when 'dict_group' then '根字典' else g.dict_label end groupName,
        case d.parent_code when 'dict_root' then 'dict_root'  when 'dict_group' then 'dict_root' else g.dict_en end groupEn,
        case d.parent_code when 'dict_root' then 'dict_root'  when 'dict_group' then 'dict_root' else g.dict_code end groupCode,
        case d.parent_code when 'dict_root' then '根字典' else t.dict_label end typeName,
        case d.parent_code when 'dict_root' then 'dict_root'  else t.dict_en end typeEn,
        case d.parent_code when 'dict_root' then 'dict_root'  else t.dict_code end typeCode,
        <include refid="dictField"/>
        from sys_dict d
        left join sys_dict t on d.parent_code = t.dict_code
        left join sys_dict g on t.parent_code = g.dict_code
        where d.id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <insert id="insert" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        insert into sys_dict(parent_code,dict_code,dict_value,dict_label,dict_en,dict_order,
                             is_default,css,status,remark,value_parser,value_param,
                             create_user,create_dept,create_time,update_user,update_dept,update_time)
        values(#{typeCode},#{dictCode},#{dictValue},#{dictLabel},#{dictEn},#{dictOrder},
               #{isDefault},#{css},#{status},#{remark},#{valueParser},#{valueParam},
               #{accessUserId},#{accessDeptId},#{accessTime},#{accessUserId},#{accessDeptId},#{accessTime})
    </insert>

    <update id="update">
        update sys_dict set
            dict_code    = #{dictCode},
            dict_label   = #{dictLabel},
            dict_en      = #{dictEn},
            dict_value   = #{dictValue},
            value_parser = #{valueParser},
            value_param  = #{valueParam},
            dict_order = #{dictOrder},
            is_default = #{isDefault},
            css        = #{css},
            status     = #{status},
            update_user = #{accessUserId},
            update_dept = #{accessDeptId},
            update_time = #{accessTime},
            remark      = #{remark}
        where id = #{id}
    </update>

    <delete id="delete">
        delete from sys_dict where id = #{id}
    </delete>

    <delete id="deleteType">
        delete from sys_dict where parent_code = #{typeCode}
    </delete>

    <delete id="deleteGroup">
        with ds as (select id from sys_dict where parent_code = #{groupCode} union all
                    select d1.id from sys_dict d
                    left join sys_dict d1 on d.dict_code = d1.parent_code
                    where d.parent_code = #{groupCode})
        delete from sys_dict d using ds where d.id = ds.id
    </delete>

    <update id="updateChildren">
        update sys_dict set parent_code = #{parentCode} where parent_code = #{preCode}
    </update>

    <update id="changeReadonly">
        update sys_dict set read_only = #{readOnly},
            update_user = #{accessUserId}, update_dept = #{accessDeptId}, update_time = #{accessTime}
        where id = #{id}
    </update>

    <select id="countReadOnlyByIdArray" resultType="java.lang.Integer">
        select count(1) from sys_dict where read_only = 1 and id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>
