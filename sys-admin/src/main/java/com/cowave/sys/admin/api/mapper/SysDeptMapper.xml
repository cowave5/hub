<?xml version="1.0" encoding="UTF-8" ?>
<!--

    Copyright (c) 2017ï½ž2099 Cowave All Rights Reserved.

    For licensing information, please contact: https://www.cowave.com.

    This code is proprietary and confidential.
    Unauthorized copying of this file, via any medium is strictly prohibited.

-->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cowave.sys.admin.api.mapper.SysDeptMapper">
    <sql id="deptField">
        d.dept_id       deptId,
        d.dept_code     deptCode,
        d.dept_name     deptName,
        d.dept_short    deptShort,
        d.dept_addr     deptAddr,
        d.dept_phone    deptPhone,
        d.read_only     readOnly,
        d.create_user   createUser,
        d.create_dept   createDept,
        d.create_time   createTime,
        d.update_user   updateUser,
        d.update_dept   updateDept,
        d.update_time   updateTime,
        d.remark
    </sql>

    <resultMap id="listMap" type="com.cowave.sys.model.admin.SysDept">
        <result column="parent_id"    property="parentId"/>
        <result column="deptId"       property="deptId"/>
        <result column="deptCode"     property="deptCode"/>
        <result column="deptName"     property="deptName"/>
        <result column="deptShort"    property="deptShort"/>
        <result column="deptAddr"     property="deptAddr"/>
        <result column="deptPhone"    property="deptPhone"/>
        <result column="readOnly"     property="readOnly"/>
        <result column="remark"       property="remark"/>
        <result column="createUser"   property="createUser"/>
        <result column="createDept"   property="createDept"/>
        <result column="createTime"   property="createTime"/>
        <result column="updateUser"   property="updateUser"/>
        <result column="updateDept"   property="updateDept"/>
        <result column="updateTime"   property="updateTime"/>
        <collection property="leaderList" javaType="list" ofType="com.cowave.sys.model.admin.SysUserDept">
            <result column="user_id"      property="userId"/>
            <result column="user_name"    property="userName"/>
        </collection>
    </resultMap>

    <resultMap id="infoMap" type="com.cowave.sys.model.admin.SysDept">
        <result column="deptId"       property="deptId"/>
        <result column="deptCode"     property="deptCode"/>
        <result column="deptName"     property="deptName"/>
        <result column="deptShort"    property="deptShort"/>
        <result column="deptAddr"     property="deptAddr"/>
        <result column="deptPhone"    property="deptPhone"/>
        <result column="readOnly"     property="readOnly"/>
        <result column="remark"       property="remark"/>
        <result column="createUser"   property="createUser"/>
        <result column="createDept"   property="createDept"/>
        <result column="createTime"   property="createTime"/>
        <result column="updateUser"   property="updateUser"/>
        <result column="updateDept"   property="updateDept"/>
        <result column="updateTime"   property="updateTime"/>
        <collection property="parentIds" javaType="list" ofType="Long">
            <result column="parent_id"/>
        </collection>
        <collection property="leaderIds" javaType="list" ofType="Long">
            <result column="user_id"/>
        </collection>
    </resultMap>

    <select id="listTree" resultType="com.cowave.sys.admin.api.entity.TreeNode">
        select t.dept_id   id,
               t.parent_id pid,
               d.dept_name as label
        from sys_dept_tree t
        left join sys_dept d ON t.dept_id = d.dept_id
        order by t.parent_id, t.dept_id
    </select>

    <select id="list" resultMap="listMap">
        select t.parent_id, u.user_id, u.user_name,
        <include refid="deptField"/>
        from sys_dept d
        left join sys_dept_tree t on d.dept_id = t.dept_id
        left join sys_user_dept ud on d.dept_id = ud.dept_id and ud.is_leader = 1
        left join sys_user u on u.user_id = ud.user_id
        where 1 = 1
        <if test="dept.deptName != null and dept.deptName != ''">
            and dept_name like concat('%', #{dept.deptName}, '%')
        </if>
        <if test="dept.deptPhone != null and dept.deptPhone != ''">
            and dept_phone like concat('%', #{dept.deptPhone}, '%')
        </if>
        order by t.parent_id, t.dept_id
    </select>

    <select id="info" resultMap="infoMap">
        select t.parent_id, u.user_id,
        <include refid="deptField"/>
        from sys_dept d
        left join sys_dept_tree t on d.dept_id = t.dept_id
        left join sys_user_dept u on d.dept_id = u.dept_id and u.is_leader = 1
        where d.dept_id = #{deptId}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="deptId" keyColumn="dept_id">
        INSERT INTO sys_dept(dept_code,dept_name,dept_short,dept_addr,dept_phone,remark,
                             create_user, update_user, create_dept, update_dept, create_time, update_time)
        values(#{deptCode}, #{deptName},#{deptShort},#{deptAddr},#{deptPhone},#{remark},
               #{accessUserId},#{accessUserId},#{accessDeptId},#{accessDeptId},#{accessTime},#{accessTime})
    </insert>

    <update id="update">
		update sys_dept set
		       dept_name   = #{deptName},
		       dept_short  = #{deptShort},
		       dept_addr   = #{deptAddr},
		       dept_phone  = #{deptPhone},
               remark      = #{remark},
               update_user = #{accessUserId},
               update_dept = #{accessDeptId},
		       update_time = #{accessTime}
		where dept_id = #{deptId}
	</update>

    <update id="changeReadonly">
        update sys_dept set read_only = #{readOnly},
                            update_user = #{accessUserId}, update_dept = #{accessDeptId}, update_time = #{accessTime}
        where dept_id = #{deptId}
    </update>

    <delete id="deleteDeptParents">
        delete from sys_dept_tree where dept_id = #{deptId}
    </delete>

    <delete id="deleteByIdArray">
        delete from sys_dept where dept_id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteDeptParentsByIdArray">
        delete from sys_dept_tree where dept_id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteDeptUserByIdArray">
        delete from sys_user_dept where dept_id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <insert id="insertDeptParents">
        insert into sys_dept_tree(dept_id, parent_id)values
        <foreach collection="list" item="parentId" index="index" separator=",">
            (#{deptId}, #{parentId})
        </foreach>
    </insert>

    <select id="childIds" resultType="java.lang.Long">
        with recursive tree (dept_id, parent_id) as
            (select t1.dept_id, t1.parent_id from sys_dept_tree t1 where dept_id = #{deptId} union
            select t2.dept_id, t2.parent_id from sys_dept_tree t2 join tree on t2.parent_id = tree.dept_id)
        select distinct tree.dept_id from tree JOIN sys_dept u on tree.dept_id = u.dept_id
    </select>

    <select id="countChildByIdArray" resultType="java.lang.Integer">
        select count(1) from sys_dept_tree where parent_id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="countReadOnlyByIdArray" resultType="java.lang.Integer">
        select count(1) from sys_dept where read_only = 1 and dept_id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryByIdArray" resultType="com.cowave.sys.model.admin.SysDept">
        select
        <include refid="deptField"/>
        from sys_dept d where d.dept_id in
        <foreach collection="array"  item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getPostsById" resultType="com.cowave.sys.model.admin.SysDeptPost">
        select d.dept_id deptId, d.post_id postId, d.is_default isDefault, p.post_name postName
        from sys_dept_post d
        left join sys_post p on d.post_id = p.post_id
        where dept_id = #{deptId}
    </select>

    <delete id="deleteDeptPosts">
        delete from sys_dept_post where dept_id = #{deptId}
    </delete>

    <insert id="insertDeptPosts">
        insert into sys_dept_post(dept_id, post_id, is_default)values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.deptId}, #{item.postId}, #{item.isDefault})
        </foreach>
        on conflict do nothing
    </insert>

    <delete id="deleteDeptUsers">
        delete from sys_user_dept where dept_id = #{deptId}
    </delete>

    <insert id="insertDeptUsers">
        insert into sys_user_dept(user_id, dept_id, post_id, is_default, is_leader) values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userId}, #{item.deptId}, #{item.postId}, #{item.isDefault}, #{item.isLeader})
        </foreach>
        on conflict(user_id, dept_id, post_id)
        do update set is_default = excluded.is_default, is_leader = excluded.is_leader
    </insert>

    <select id="getUsersById" resultType="com.cowave.sys.model.admin.SysUserDept">
        select dept_id deptId, post_id postId, is_default isDefault, user_id userId, is_leader isLeader
        from sys_user_dept where dept_id = #{deptId}
    </select>

    <select id="getUsersByCode" resultType="com.cowave.sys.model.admin.SysUser">
        select u.user_id userId, u.user_name userName
        from sys_user u, sys_dept d, sys_user_dept ud
        where d.dept_code = #{deptCode} and d.dept_id = ud.dept_id and ud.user_id = u.user_id
    </select>
</mapper>
